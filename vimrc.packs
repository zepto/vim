" File: .vimrc
" Author: Josiah Gordon
" License:  The MIT License {{{
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
"
" The above copyright notice and this permission notice shall be included in
" all copies or substantial portions of the Software.
"
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
" THE SOFTWARE.
" }}}

" Initialize."{{{
runtime! vimrc.d/vimrc.init
"}}}

" Turn filtype settings and syntax on."{{{
" Turn on filetype detection and other options.
filetype plugin indent on

" Turn on syntax before setting the colors otherwise they will be unset.
syntax on

"}}}

" Plugin options"{{{

" TagBar settings"{{{
let g:tagbar_left = 1
let g:tagbar_width = 25
" Add New languages to tagbar.
" Freebasic {{{
let g:tagbar_type_freebasic = {
            \ 'ctagstype': 'basic',
            \ 'kinds': [
                \ 'c:constants',
                \ 'g:enumerations',
                \ 'f:functions',
                \ 'l:labels',
                \ 't:types',
                \ 'v:variables'
            \]
        \}
"}}}
"}}}

" Coc settings"{{{
let g:coc_global_extensions = [
            \ 'coc-diagnostic',
            \ 'coc-json',
            \ 'coc-pyright',
            \ 'coc-jedi',
            \ 'coc-solargraph',
            \ 'coc-markdownlint',
            \ 'coc-html',
            \ 'coc-css',
            \ 'coc-tsserver',
            \ 'coc-spell-checker',
            \ 'coc-pairs',
            \ 'coc-clangd',
            \ 'coc-vimlsp',
            \ 'coc-pydocstring',
            \ 'coc-lists',
            \ 'coc-rust-analyzer',
            \ 'coc-snippets',
            \ 'coc-lua',
            \ 'coc-go']
" coc-explorer settings "{{{
let g:coc_explorer_global_presets = {
            \ '.vim': {
            \    'root-uri': '~/.vim',
            \ },
            \ 'cocConfig': {
            \    'root-uri': '~/.config/coc',
            \ },
            \ 'tab': {
            \    'position': 'tab',
            \    'quit-on-open': v:true,
            \ },
            \ 'tab:$': {
            \    'position': 'tab:$',
            \    'quit-on-open': v:true,
            \ },
            \ 'floating': {
            \    'position': 'floating',
            \    'open-action-strategy': 'sourceWindow',
            \ },
            \ 'floatingTop': {
            \    'position': 'floating',
            \    'floating-position': 'center-top',
            \    'open-action-strategy': 'sourceWindow',
            \ },
            \ 'floatingLeftside': {
            \    'position': 'floating',
            \    'floating-position': 'left-center',
            \    'floating-width': 50,
            \    'open-action-strategy': 'sourceWindow',
            \ },
            \ 'floatingRightside': {
            \    'position': 'floating',
            \    'floating-position': 'right-center',
            \    'floating-width': 50,
            \    'open-action-strategy': 'sourceWindow',
            \ },
            \ 'simplify': {
            \    'file-child-template': '[selection | clip | 1] [indent][icon | 1] [filename omitCenter 1]'
            \ },
            \ 'buffer': {
            \    'sources': [{'name': 'buffer', 'expand': v:true}]
            \ },
            \ }
"}}}

" coc-snippets settings "{{{
    let g:coc_snippet_next = '<tab>'
"}}}

" coc-vimslp settings "{{{
let g:markdown_fenced_languages = [
            \ 'vim',
            \ 'help'
            \]
"}}}
"}}}

" Python-syntax settings"{{{
let g:python_highlight_all = 1
"}}}

" Vim lsp cxx highlighting settings"{{{
let g:lsp_cxx_hl_use_text_props = 1
"}}}

" FZF settings "{{{
" let $FZF_DEFAULT_OPTS="--bind ctrl-y:preview-up,ctrl-e:preview-down,ctrl-b:preview-page-up,ctrl-f:preview-page-down,ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down,shift-up:preview-top,shift-down:preview-bottom,alt-up:half-page-up,alt-down:half-page-down,?:toggle-preview"

let $RIPGREP_CONFIG_PATH=expand("~/.ripgreprc")

" Coc-FZF settings "{{{
" let g:coc_fzf_preview = 'up,border-sharp'
" let g:coc_fzf_opts = ['--ansi', '--color=border:grey', '--border=sharp']
" }}}
"}}}

" gitgutter settings " {{{
" Disable all gitgutter mappings.
let g:gitgutter_map_keys = 0
"}}}

" end plugin options"}}}

" Finalize."{{{
runtime! vimrc.d/vimrc.end

" Load all packs so they will be in runtimepath for helptags.
packloadall!
packadd! coc.nvim
packadd! coc-fzf
packadd! fzf.vim
packadd! vim-lsp-cxx-highlight
packadd! vim-sandwich
packadd! vim-gitgutter
" packadd auto-pairs
" packadd vim-matchup

" Load all helptags
silent! helptags ALL
"}}}

set secure
" vim: fdm=marker:fdl=0:fmr={{{,}}}
